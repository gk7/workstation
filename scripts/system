#!/bin/bash

case "$1" in
	hibernate) sudo s2disk ;;
	restart) reboot ;;
	shutdown) poweroff ;;
	suspend) sudo s2ram ;;
	dmenurun) dmenu_run -i -nb '#000000' -nf '#7d7d7d' -sb '#000000' -sf '#ffffff' -fn 'Terminus 8' ;;
	screenshot) scrot '%Y-%m-%d-%H:%M:%S_$wx$h_scrot.png' -e 'mv $f /home/garry/Pictures/screenshots && gpicview /home/garry/Pictures/screenshots/$n' ;;
esac
case "$1" in
	volume) case "$2" in
			up) amixer set Master 3%+ > /dev/null ;;
			down) amixer set Master 3%- > /dev/null ;;
			toggle) amixer set Master toggle > /dev/null ;;
			esac
esac
case "$1" in
	brightness) case "$2" in 
			up) light 10+  ;;
			down) light 10- ;;
			esac
esac
case "$1" in
	killnotify) xdotool mousemove 733 1 click 1 mousemove restore ;;
	#		killall dunst 2>&1> /dev/null;
#		    dunst -config /home/garry/.dunstrc 2>&1> /dev/null & ;;
esac
case "$1" in
	composite) killall xcompmgr && sleep 1 && xdotool key --clearmodifiers "Super_L+q" && sleep 2 && xcompmgr ;;
esac
case "$1" in
	mouse) case "$2" in
			toggle) 
				_toggle="/tmp/toggle"
				if [ ! -e $_toggle ]; then
			#		killall unclutter
					touch $_toggle
					xinput enable OM 
					notify-send "Mouse enabled"
					sleep 1 && xdotool mousemove 733 1 click 1 mousemove restore
				else
					rm $_toggle
					iocane p &&
					xinput disable OM 
					notify-send "Mouse disabled"
					sleep 1 && xdotool mousemove 733 1 click 1 mousemove restore
#					unclutter -idle 0.1 &
				fi
			esac
esac
case "$1" in
	net) case "$2" in
			on) 
				noti(){
				FILE="$( grep 'DNS' /tmp/wvdial.out)"
				  if [ -n "$FILE" ]; then
					notify-send "Successfully Connected."
					exit 0
				  elif [ -z "$FILE" ]; then
					noti	
					exit 0
				  fi
				
				}
				echo "" > /tmp/wvdial.out 
				IPTAB="$(systemctl status iptables.service | awk 'NR==3 {print $2}')"
				FILE="$( grep 'DNS' /tmp/wvdial.out)"
				ID="$(lsusb|grep 1260)"
				  if [[ $IPTAB == inactive ]]; then
					if [[ -z $ID ]]; then
						notify-send "Modem not found"
						exit 0
					
				  	else
				    		notify-send "Activating Firewall..."
				    		sudo systemctl start iptables.service &&
				    		notify-send --urgency=critical "Firewall Activated. Dialing Modem..."
				    		sudo wvdial > /tmp/wvdial.out 2>&1 &
				   		 noti
				  	fi
				  fi
  				  if [[ $IPTAB == active ]]; then
					if [[ -z $ID ]]; then
						notify-send "Modem not found"
						exit 0
					
				  	else
				    		notify-send --urgency=critical "Firewall already active. Dialing Modem..."
				    		sudo wvdial > /tmp/wvdial.out 2>&1 &
				    		noti
					fi
				  fi ;;
			off) 
				if [ -n "`/bin/pidof wvdial`" ]; then
				notify-send "Disconnecting..."
				sudo killall wvdial && notify-send "Disconnected" &&
				echo "" > /tmp/wvdial.out
				else
				notify-send "Wvdial not running."
				fi
			esac
esac
